@model IList<DabTrial.Models.UploadFileModel>
@{
    ViewBag.Title = "Upload files";
    Html.Assets().Libraries.Uses("Validation", "MyUtilityScripts");
}

<h2>Files</h2>
@using (Html.BeginForm("Upload","ManageFiles",FormMethod.Post, new {enctype="multipart/form-data"} )) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>upload files</legend>
        <table>
            <thead>
                <tr>
                    <th>File</th>
                    <th>File Name On web site</th>
                    <th>File Destination</th>
                </tr>
                <tr>
                    <td colspan="2">
                        <span class="label-details">(File name on web site will be the same as the orginal file name if left blank)</span>
                     </td>
                </tr>
            </thead>
            <tbody>
                @for(int i=0;i < Model.Count;i++)
                {
                <tr>
                    <td>
                        @Html.TextBoxFor(model=>model[i].File, new { type="file", id=string.Format("[{0}]_File",i)})
                        @Html.ValidationMessageFor(model=>model[i].File)
                    </td>
                    <td>
                        @Html.TextBoxFor(model=>model[i].ServerFileName, Html.PartialMirrorAttributesFor(model=>model[i].File, @"([^\\]+)$", true))
                        @Html.ValidationMessageFor(model=>model[i].ServerFileName)
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model[i].SaveDirectory, Model[i].DirectoryList, new { id=string.Format("[{0}]_SaveDirectory",i)})
                        @Html.ValidationMessageFor(model=>model[i].SaveDirectory)
                    </td>
                </tr>
                }
            </tbody>
        </table>
        <p>
            <input type="submit" value="Upload" />
        </p>
    </fieldset>
}
