// placeholder - HTML5 input placeholder polyfill
// Copyright (c) 2012 DIY Co GITHUB update dec 2013
(function (n) { var i = "placeholder" in document.createElement("input"), t = ["-moz-box-sizing", "-webkit-box-sizing", "box-sizing", "padding-top", "padding-right", "padding-bottom", "padding-left", "margin-top", "margin-right", "margin-bottom", "margin-left", "border-top-width", "border-right-width", "border-bottom-width", "border-left-width", "line-height", "font-size", "font-family", "width", "height", "top", "left", "right", "bottom"], r = function (i) { function a() { u.toggle(!n.trim(r.val()).length) } var f, e, h, o, s, c, l, r = n(i), u; try { if (l = r[0].getAttributeNode("placeholder"), !l) return; if (e = r[0].getAttribute("placeholder"), !e || !e.length) return; r[0].setAttribute("placeholder", ""), r.data("placeholder", e) } catch (v) { return } for (h = {}, f = 0; f < t.length; f++) h[t[f]] = r.css(t[f]); o = parseInt(r.css("z-index"), 10), (isNaN(o) || !o) && (o = 1), u = n("<span>").addClass("placeholder").html(e), u.css(h), u.css({ cursor: r.css("cursor") || "text", display: "block", position: "absolute", overflow: "hidden", "z-index": o + 1, background: "none", "border-top-style": "solid", "border-right-style": "solid", "border-bottom-style": "solid", "border-left-style": "solid", "border-top-color": "transparent", "border-right-color": "transparent", "border-bottom-color": "transparent", "border-left-color": "transparent" }), u.insertBefore(r), c = r.offset().top - u.offset().top, s = parseInt(u.css("margin-top")), isNaN(s) && (s = 0), u.css("margin-top", s + c); u.on("mousedown", function () { r.is(":enabled") && window.setTimeout(function () { r.trigger("focus") }, 0) }); r.on("focus.placeholder", function () { u.hide() }); r.on("blur.placeholder", function () { a() }); r[0].onpropertychange = function () { event.propertyName === "value" && a() }, r.trigger("blur.placeholder") }; n.fn.placeholder = function (n) { var t = this; return (n = n || {}, i && !n.force) ? this : (window.setTimeout(function () { t.each(function () { var t = this.tagName.toLowerCase(); (t === "input" || t === "textarea") && r(this, n) }) }, 0), this) } })(jQuery)